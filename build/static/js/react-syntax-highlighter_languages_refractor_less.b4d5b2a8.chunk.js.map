{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_less.b4d5b2a8.chunk.js","mappings":"oFAKA,SAASA,EAAKC,GAQZA,EAAMC,UAAUF,KAAOC,EAAMC,UAAUC,OAAO,MAAO,CACnDC,QAAS,CACP,mBACA,CACEC,QAAS,kBACTC,YAAY,IAGhBC,OAAQ,CACNF,QACE,0EACFG,OAAQ,CACNC,YAAa,UAIjBC,SAAU,CACRL,QACE,0GACFG,OAAQ,CAENG,SAAU,aAGdC,SAAU,0CACVC,SAAU,aAEZZ,EAAMC,UAAUY,aAAa,OAAQ,WAAY,CAC/CH,SAAU,CAER,CACEN,QAAS,cACTG,OAAQ,CACNC,YAAa,MAGjB,aAEF,cAAe,CACbJ,QAAS,sCACTC,YAAY,EACZS,MAAO,aAGb,CAvDAC,EAAOC,QAAUjB,EACjBA,EAAKkB,YAAc,OACnBlB,EAAKmB,QAAU,E","sources":["../node_modules/refractor/lang/less.js"],"sourcesContent":["'use strict'\n\nmodule.exports = less\nless.displayName = 'less'\nless.aliases = []\nfunction less(Prism) {\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern:\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern:\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n    operator: /[+\\-*\\/]/\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      }, // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n"],"names":["less","Prism","languages","extend","comment","pattern","lookbehind","atrule","inside","punctuation","selector","variable","property","operator","insertBefore","alias","module","exports","displayName","aliases"],"sourceRoot":""}