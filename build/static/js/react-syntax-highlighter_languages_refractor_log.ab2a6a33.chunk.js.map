{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_log.ab2a6a33.chunk.js","mappings":"oFAKA,SAASA,EAAIC,GAKXA,EAAMC,UAAUF,IAAM,CACpBG,OAAQ,CAENC,QAAS,2DACTC,QAAQ,GAEVC,UAAW,CACTF,QACE,uIACFG,YAAY,EACZF,QAAQ,EACRG,MAAO,CAAC,iBAAkB,2BAC1BC,OAAQR,EAAMC,UAA0B,gBAAK,CAC3CQ,QAAS,SACTC,SAAU,qBACVC,YAAa,WAGjBC,MAAO,CACL,CACET,QACE,6EACFI,MAAO,CAAC,QAAS,cAEnB,CACEJ,QAAS,2BACTI,MAAO,CAAC,UAAW,cAErB,CACEJ,QAAS,yCACTI,MAAO,CAAC,OAAQ,YAElB,CACEJ,QAAS,yBACTI,MAAO,CAAC,QAAS,YAEnB,CACEJ,QAAS,6CACTI,MAAO,CAAC,QAAS,aAGrBM,SAAU,CACRV,QACE,wFACFG,YAAY,GAEdQ,UAAW,CACTX,QAAS,oCACTG,YAAY,EACZC,MAAO,WAETQ,IAAK,oDACLC,MAAO,CACLb,QAAS,6DACTG,YAAY,EACZC,MAAO,OAET,aAAc,CACZJ,QAAS,kCACTI,MAAO,YAET,cAAe,CACbJ,QAAS,sCACTI,MAAO,YAETU,OAAQ,CACNd,QACE,qEACFG,YAAY,EACZC,MAAO,YAETW,KAAM,CACJf,QACE,oEACFI,MAAO,YAETY,KAAM,CACJhB,QAAS,6BACTI,MAAO,YAET,YAAa,CACXJ,QACE,qFACFG,YAAY,EACZF,QAAQ,EACRG,MAAO,UAETa,KAAM,CACJjB,QAASkB,OACP,4DAA4DC,OAC1D,IACA,4FACGA,OACH,IACA,uKACGA,OACL,KAEFf,MAAO,UAETgB,KAAM,CACJpB,QACE,qEACFI,MAAO,UAETiB,QAAS,2BACTC,OAAQ,CACNtB,QACE,yGACFG,YAAY,GAEdoB,SAAU,6BACVf,YAAa,WAEjB,CA1HAgB,EAAOC,QAAU7B,EACjBA,EAAI8B,YAAc,MAClB9B,EAAI+B,QAAU,E","sources":["../node_modules/refractor/lang/log.js"],"sourcesContent":["'use strict'\n\nmodule.exports = log\nlog.displayName = 'log'\nlog.aliases = []\nfunction log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern:\n        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [\n      {\n        pattern:\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n        alias: ['error', 'important']\n      },\n      {\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n        alias: ['warning', 'important']\n      },\n      {\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n        alias: ['info', 'keyword']\n      },\n      {\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n        alias: ['debug', 'keyword']\n      },\n      {\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n        alias: ['trace', 'comment']\n      }\n    ],\n    property: {\n      pattern:\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern:\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern:\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern:\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n          '|' +\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\n            .source +\n          '|' +\n          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\n            .source,\n        'i'\n      ),\n      alias: 'number'\n    },\n    time: {\n      pattern:\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: {\n      pattern:\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  }\n}\n"],"names":["log","Prism","languages","string","pattern","greedy","exception","lookbehind","alias","inside","keyword","function","punctuation","level","property","separator","url","email","domain","uuid","hash","date","RegExp","source","time","boolean","number","operator","module","exports","displayName","aliases"],"sourceRoot":""}