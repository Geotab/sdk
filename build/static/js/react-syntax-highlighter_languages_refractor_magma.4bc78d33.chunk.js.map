{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_magma.4bc78d33.chunk.js","mappings":"oFAKA,SAASA,EAAMC,GACbA,EAAMC,UAAUF,MAAQ,CACtBG,OAAQ,CACNC,QACE,2GACFC,YAAY,EACZC,QAAQ,GAEVC,QAAS,CACPH,QAAS,0BACTE,QAAQ,GAEVE,OAAQ,CACNJ,QAAS,kCACTC,YAAY,EACZC,QAAQ,GAGVG,QACE,ggBACFC,QAAS,qBACTC,UAAW,CACTP,QAAS,uBACTQ,MAAO,cAETC,SAAU,wBACVC,OAAQ,CACNV,QACE,uFACFC,YAAY,GAEdU,SAAU,0BACVC,YAAa,kBAEjB,CArCAC,EAAOC,QAAUlB,EACjBA,EAAMmB,YAAc,QACpBnB,EAAMoB,QAAU,E","sources":["../node_modules/refractor/lang/magma.js"],"sourcesContent":["'use strict'\n\nmodule.exports = magma\nmagma.displayName = 'magma'\nmagma.aliases = []\nfunction magma(Prism) {\n  Prism.languages.magma = {\n    output: {\n      pattern:\n        /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    // http://magma.maths.usyd.edu.au/magma/handbook/text/82\n    keyword:\n      /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    generator: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\n      alias: 'class-name'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\n    punctuation: /[()[\\]{}<>,;.:]/\n  }\n}\n"],"names":["magma","Prism","languages","output","pattern","lookbehind","greedy","comment","string","keyword","boolean","generator","alias","function","number","operator","punctuation","module","exports","displayName","aliases"],"sourceRoot":""}