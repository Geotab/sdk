{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_pascaligo.7ac9b091.chunk.js","mappings":"oFAKA,SAASA,EAAUC,IAChB,SAAWA,GAEV,IAAIC,EAAS,2CAA2CC,OACpDC,EAAO,kCAAkCD,OAAOE,QAClD,aACA,WACE,OAAOH,CACT,IAEEF,EAAaC,EAAMK,UAAUN,UAAY,CAC3CO,QAAS,0BACTC,OAAQ,CACNC,QAAS,8CACTC,QAAQ,GAEV,aAAc,CACZ,CACED,QAASE,OACP,+BAA+BR,OAAOE,QACpC,WACA,WACE,OAAOD,CACT,IAEF,KAEFQ,YAAY,EACZC,OAAQ,MAEV,CACEJ,QAASE,OACP,oBAAoBR,OAAOE,QAAQ,WAAW,WAC5C,OAAOD,CACT,IACA,KAEFS,OAAQ,MAEV,CACEJ,QAASE,OACP,eAAeR,OAAOE,QAAQ,WAAW,WACvC,OAAOD,CACT,KAEFQ,YAAY,EACZC,OAAQ,OAGZC,QAAS,CACPL,QACE,mIACFG,YAAY,GAEdG,QAAS,CACPN,QAAS,8BACTG,YAAY,GAEdI,QAAS,CACPP,QAAS,4DACTG,YAAY,GAEdK,SAAU,iBACVC,OAAQ,CAEN,6BACA,4CAEFC,SACE,2EACFC,YAAa,4BAEXC,EAAkB,CACpB,UACA,UACA,UACA,WACA,eACAC,QAAO,SAAUC,EAAOC,GAExB,OADAD,EAAMC,GAAOxB,EAAUwB,GAChBD,CACT,GAAG,CAAC,GACJvB,EAAU,cAAcyB,SAAQ,SAAUC,GACxCA,EAAEb,OAASQ,CACb,GACD,CApFA,CAoFEpB,EACL,CAzFA0B,EAAOC,QAAU5B,EACjBA,EAAU6B,YAAc,YACxB7B,EAAU8B,QAAU,E","sources":["../node_modules/refractor/lang/pascaligo.js"],"sourcesContent":["'use strict'\n\nmodule.exports = pascaligo\npascaligo.displayName = 'pascaligo'\npascaligo.aliases = []\nfunction pascaligo(Prism) {\n  ;(function (Prism) {\n    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source\n    var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(\n      /<braces>/g,\n      function () {\n        return braces\n      }\n    )\n    var pascaligo = (Prism.languages.pascaligo = {\n      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n        greedy: true\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(\n              /<type>/g,\n              function () {\n                return type\n              }\n            ),\n            'i'\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () {\n              return type\n            }),\n            'i'\n          ),\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /(:\\s*)<type>/.source.replace(/<type>/g, function () {\n              return type\n            })\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      keyword: {\n        pattern:\n          /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^&])\\b(?:False|True)\\b/i,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n        lookbehind: true\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: [\n        // Hexadecimal, octal and binary\n        /%[01]+|&[0-7]+|\\$[a-f\\d]+/i, // Decimal\n        /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n      ],\n      operator:\n        /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n    })\n    var classNameInside = [\n      'comment',\n      'keyword',\n      'builtin',\n      'operator',\n      'punctuation'\n    ].reduce(function (accum, key) {\n      accum[key] = pascaligo[key]\n      return accum\n    }, {})\n    pascaligo['class-name'].forEach(function (p) {\n      p.inside = classNameInside\n    })\n  })(Prism)\n}\n"],"names":["pascaligo","Prism","braces","source","type","replace","languages","comment","string","pattern","greedy","RegExp","lookbehind","inside","keyword","boolean","builtin","function","number","operator","punctuation","classNameInside","reduce","accum","key","forEach","p","module","exports","displayName","aliases"],"sourceRoot":""}