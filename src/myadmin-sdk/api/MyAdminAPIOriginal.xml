<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyAdminAPI</name>
    </assembly>
    <members>
        <member name="T:MyAdminAPI.MyAdminApi">
            <isSupported>true</isSupported>
            <summary>
            Summary description for MyAdminApi
            </summary>
        </member>
        <member name="T:MyAdminAPI.MyAdminApiStore">
            <isSupported>true</isSupported>
            <summary>
            Primary Interface Store for the MyAdminApi set.
            </summary>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.Authenticate(System.String,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <summary>
            Authenticates the user and returns the required API Key and Session ID, used for all subsequent API calls. If too
            much time has elapsed between subsequent API calls, calling other methods will throw a SessionExpiredException. When this occurrs,
            call Authenticate to obtain a new session ID.
            </summary>
            <remarks>Calls to this method will be rate limited. Ensure reauthentication is ONLY performed when a SessionExpiredException is thrown. Limit your calls to 500/min and 30000/hour.</remarks>
            <param name="username" required="required">Your existing MyAdmin User Name (email address).</param>
            <param name="password" required="required">Your existing MyAdmin User Password.</param>
            <returns>The active <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUser"/> object that contains your API Key, which is required for all API calls.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.RegisterNewUser(System.Guid,System.Guid,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>User Admin</group>
            <groupSummary>This group of methods allows the user to manage MyAdmin user accounts.</groupSummary>
            <summary>
            Registers a new user account into MyAdmin. An activation email will be sent to the user's email address.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="username" required="required">The new users' email address.</param>
            <param name="password" required="required">The new users' password (min 5 characters).</param>
            <param name="accountNos" required="required">String array of account numbers (see <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUser"/>.Accounts and <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiAccount"/>) to be allocated to the user.</param>
            <param name="roles" required="required">String array array of roles (see <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUser"/>.Roles and <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRole"/>) to be allocated to the user.</param>
            <param name="userTypeId" >UserType Id for (see <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUser"/>.</param>
            <returns>Returns true when the user is successfully created, otherwise false.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.LookupDevice(System.Guid,System.Guid,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser or MyAdminApiInstaller</roles>
            <group>Devices and Contracts</group>
            <groupSummary>This group of methods allows the user to access information about devices and their associated contracts.</groupSummary>
            <summary>
            Returns current information relating to the device serial number provided.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="serialNo" required="required">A serial number of a Geotab GO device.</param>
            <returns>Returns an <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceInstallResult"/> object that contains current, relevant information pertaining to the device.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.LogInstall(System.Guid,System.Guid,System.String,System.String,System.String,System.Nullable{System.Double},System.String,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser or MyAdminApiInstaller</roles>
            <group>Devices and Contracts</group>
            <groupSummary>This group of methods allows the user to access information about devices and their associated contracts.</groupSummary>
            <summary>
            Logs a device installation and returns the status of the device.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="installerName" required="required">Name of the installer logging the request.</param>
            <param name="installerCompany" required="required">Name of the installer's company.</param>
            <param name="serialNo" required="required">A serial number of a Geotab GO device which has been installed.</param>
            <param name="odometer">Vehicle's current odometer reading.</param>
            <param name="assetNumber">Customer's asset number for the vehicle.</param>
            <param name="comments">Any comments related to the installation.</param>
            <returns>Returns an <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceInstallResult"/> object that contains current, relevant information pertaining to the device.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetAvailableProducts(System.Guid,System.Guid,System.String,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, Order_Admin</roles>
            <group>Order Management</group>
            <summary>
            Returns an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiProductAndPricing"/> available to an account.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="required">The account from which to retrieve the list of available products.</param>
            <param name="productCodeFilter">Product code to filter.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiProductAndPricing"/> available to the account.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetDevicePlans(System.Guid,System.Guid,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Order Management</group>
            <summary>
            Returns an array of active <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDevicePlan"/>, available to all assigned accounts.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount">Limits results to device plans available to the specified account.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDevicePlan"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetUser(System.Guid,System.Guid,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Order Management</group>
            <summary>
            Returns the user <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUser"/>, associated with a given email account.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="email" required="required">Limits result to the specific user associated with a known email.</param>
            <returns>Instance of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUser"/> object.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetWarrantyOptions(System.Guid,System.Guid)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, Order_Admin</roles>
            <group>Devices and Contracts</group>
            <summary>
            Returns an array of available warranty options.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiWarrantyOption"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetShippingFees(System.Guid,System.Guid,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, Order_Admin</roles>
            <group>Order Management</group>
            <groupSummary>This group of methods allows the user to submit orders to Geotab.</groupSummary>
            <summary>
            Returns an array of shipping fees (used for Orders).
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount">Filters list of shipping fees to the specified account.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiShippingFee"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetDeviceContracts(System.Guid,System.Guid,System.String,System.DateTime,System.DateTime,System.String[],System.String[],System.String[],System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.Nullable{System.Int32})">
            <isSupported>true</isSupported>
            <group>Devices and Contracts</group>
            <roles>MyAdminApiUser, Billing_Admin</roles>
            <summary>
            Returns an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContract"/>. This method returns all contracts that are active within the specified date range, filtered based on other parameters.
            If nextId is specified, the result set is limited to 1000 records. To obtain the first set of records, pass 0 into nextId. If the result set contains 1000 records, 
            call GetDeviceContracts again passing the Id of the last record in the current result set as the nextId parameter. This method returns device contracts that 
            are active during the specified date range.
            </summary>
            <remarks>The maximum date range is 60 days.</remarks>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="required">Account number (see <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUser"/>.Accounts) for which to retrieve the device contracts.</param>
            <param name="fromDate" required="required">Start of the date range (value in UTC).</param>
            <param name="toDate" required="required">End of the date range (value in UTC).</param>
            <param name="serialNos">String array of device serial numbers to filter.</param>
            <param name="imeis">String array of device IMEI numbers to filter.</param>
            <param name="thirdPartyIds">Array of third party ids</param>
            <param name="userCompanyId">ID of the <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUserCompany"/> to filter. -1 = show all companies, 0 = show unassigned.</param>
            <param name="devicePlanId">ID of the <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDevicePlan"/> to filter. -1 = show all device plans, 0 = show unassigned.</param>
            <param name="commentsFilter">Filter array by comment.</param>
            <param name="purchaseOrderFilter">Filter for a specified purchase order number.</param>
            <param name="includeConnectInfo">Includes device connection info.</param>
            <param name="showShelfStockOnly">Filters for devices that have never activated.</param>
            <param name="showNoDatabaseOnly">Filters for devices that are not registered in a MyGeotab database.</param>
            <param name="groupIdFilter">Filter array by groupId.</param>
            <param name="nextId">If specified, limits the result set to 1000 records and returns device contracts that have IDs greater than this value. To obtain the first limited result set, pass 0 as this value.</param>
            <param name="thirdPartyIdOnly">Retrieve only those devices that have a third party id</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContract"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.ChangeDeviceBillingPlan(System.Guid,System.Guid,System.String,System.String,System.Int32,System.Boolean)">
            <isSupported>true</isSupported>
            <group>Devices and Contracts</group>
            <roles>MyAdminApiUser, Device_Admin</roles>
            <summary>
            Submits a request to change the billing plan (<see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDevicePlan"/>) for the provided device.
            <remarks>
            This method does not support the Terminate plan (See <see cref="M:MyAdminAPI.MyAdminApiStore.TerminateDeviceBilling(System.Guid,System.Guid,System.String,System.Int32,System.String,System.Boolean)"/> for device terminations).
            &lt;br/&gt;&lt;br/&gt;
            Note: When using the sandbox environment, this method will not affect live device configuration,
            but the billing changes will be saved in the sandbox environment.
            </remarks>
            </summary>
            <param name="apiKey" required="required">The active Api Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="serialNo" required="required">A Geotab GO Device serial number.</param>
            <param name="promoCode">An optional promo code, when applicable.</param>
            <param name="devicePlanId" required="required">The new device plan ID. See <see cref="M:MyAdminAPI.MyAdminApiStore.GetDevicePlans(System.Guid,System.Guid,System.String)"/> to obtain a list of valid plans.</param>
            <param name="isImei">Indicates whether the provided serial number is an IMEI. If true, the serial number is an IMEI. If False or not specified, the serial number is a Geotab device serial number.</param>
            <returns><see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceBillingChangeResult"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.TerminateDeviceBilling(System.Guid,System.Guid,System.String,System.Int32,System.String,System.Boolean)">
            <isSupported>true</isSupported>
            <group>Devices and Contracts</group>
            <roles>MyAdminApiUser, Device_Admin</roles>
            <summary>
            Submits a request to terminate a billing plan for the provided device.
            </summary>
            <param name="apiKey" required="required">The active Api Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="serialNo" required="required">A Geotab GO Device serial number.</param>
            <param name="reasonId" required="required">ID of the <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContractRequestReason"/> that the plan is being terminated. Call <see cref="M:MyAdminAPI.MyAdminApiStore.GetTerminationReasons(System.Guid,System.Guid)"/> for a list of possible reasons.</param>
            <param name="comments" required="required">A comment to add to the termination record.</param>
            <param name="isImei">Indicates whether the provided serial number is an IMEI. If true, the serial number is an IMEI. If False or not specified, the serial number is a Geotab device serial number.</param>
            <returns><see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceBillingChangeResult"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.TerminateDevicesBilling(System.Guid,System.Guid,System.String[],System.Int32)">
            <isSupported>false</isSupported>
            <group>Devices and Contracts</group>
            <roles>MyAdminApiUser, Device_Admin</roles>
            <summary>
            Submits a request to terminate a billing plan for the provided device.
            </summary>
            <param name="apiKey" required="required">The active Api Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="serialNos" required="required">Geotab GO Device serial numbers.</param>
            <param name="reasonId" required="required">ID of the <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContractRequestReason"/> that the plan is being terminated. Call <see cref="M:MyAdminAPI.MyAdminApiStore.GetTerminationReasons(System.Guid,System.Guid)"/> for a list of possible reasons.</param>
            <returns>List of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceBillingChangeResult"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetTerminationReasons(System.Guid,System.Guid)">
            <isSupported>true</isSupported>
            <group>Devices and Contracts</group>
            <roles>MyAdminApiUser, Device_Admin</roles>
            <summary>
            Returns an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContractRequestReason"/> that are possible reasons for termination.
            </summary>
            <param name="apiKey" required="required">The active Api Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContractRequestReason"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetSecondaryTerminationReasons(System.Guid,System.Guid,System.Int32)">
            <isSupported>true</isSupported>
            <group>Devices and Contracts</group>
            <roles>MyAdminApiUser, Device_Admin</roles>
            <summary>
            Returns an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContractRequestReason"/> that are possible reasons for termination.
            </summary>
            <param name="apiKey" required="required">The active Api Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="primaryRequestReasonId" required="required">The primary termination request reason id for which to find secondary termination requests reasons.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContractRequestReason"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetDeviceContractAutoRequests(System.Guid,System.Guid,System.String,System.String[],System.String[],System.Nullable{System.Int32},System.DateTime,System.DateTime)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, Device_Admin</roles>
            <group>Devices and Contracts</group>
            <summary>
            Gets the device contract request history for the given user and account.
            </summary>
            <remarks>The maximum date range is 60 days.</remarks>
            <param name="apiKey" required="required">The active Api Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="required">Account number (see <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUser"/>.Accounts) to retrieve contract request history from.</param>
            <param name="serialNos">Array of device serial numbers to filter by.</param>
            <param name="imeis">Array of modem serial numbers (IMEIs) to filter by.</param>
            <param name="userCompanyIdFilter">Customer company ID to filter by.</param>
            <param name="fromDate" required="required">Start of the date range.</param>
            <param name="toDate" required="required">End of the date range.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContractAutoRequest"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.UpdateDeviceContracts(System.Guid,System.Guid,System.String[],System.Boolean,System.String,System.Boolean,System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Boolean},System.Boolean,System.String,System.Boolean,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, Device_Admin</roles>
            <group>Devices and Contracts</group>
            <summary>
            Updates the comment and/or user contact (eg. assigned customer) for one or more Device Contracts.
            </summary>
            <param name="apiKey" required="required">The active Api Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="serialNos" required="required">Serial numbers of the Device Contracts to update.</param>
            <param name="updateComments">True if comments are to be updated.</param>
            <param name="comments">New comment if updateComments is true.</param>
            <param name="updateUserContact">True if assigned User Contact is to be updated.</param>
            <param name="userContactId">ID of the <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUserContact"/> to assign to the Device Contracts if updateUserContact is true. See <see cref="M:MyAdminAPI.MyAdminApiStore.GetUserContacts(System.Guid,System.Guid,System.String,System.String,System.Boolean)"/> to obtain a list of User Contacts.</param>
            <param name="updateActiveTracking">True if Active Tracking status for these devices should be changed as per activeTrackingDisallowed parameter, false to not update Active Tracking status.</param>
            <param name="activeTrackingDisallowed">True if Active Tracking should be disallowed, false if Active Tracking should be allowed. If updateActiveTracking is false or not specified, this parameter has no effect.</param>
            <param name="updateGroupId">True if the GroupId for these devices should be changed as per groupId parameter, false to not update GroupId.</param>
            <param name="groupId">GroupId setting for these devices. If updateGroupId is false or not specified, this parameter has no effect. The group ID may be used by the API user to group or categorize devices for the user's convenience.</param>
            <param name="updatePromoCode">True if the PromoCode for these devices should be changed as per promoCode parameter, false to not update PromoCode.</param>
            <param name="promoCode">PromoCode setting for these devices. If updatePromoCode is false or not specified, this parameter has no effect. Apply a valid promo code to the device(s).</param>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetInstallLogs(System.Guid,System.Guid,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Devices and Contracts</group>
            <summary>
            Gets an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceInstallResult"/>. The method returns all install logs that occurred
            within the provided date range, filtered by the other parameters.
            </summary>
            <remarks>The maximum date range is 60 days.</remarks>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="installerFilter">Name of the installer to filter by.</param>
            <param name="companyNameFilter">Name of the company to filter by.</param>
            <param name="serialNoFilter">Device serial number to filter by.</param>
            <param name="assetNumber">Device asset number to filter by.</param>
            <param name="fromDate">Start of the date range. This field is required if serialNoFilter is not specified.</param>
            <param name="toDate">End of the date range. This field is required if serialNoFilter is not specified.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceInstallResult"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetUserContacts(System.Guid,System.Guid,System.String,System.String,System.Boolean)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>User Contact</group>
            <groupSummary>This group of methods allows the user to manage user contact information.</groupSummary>
            <summary>
            Returns an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUserContact"/> for the API user, for the specified account.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="required">Account number (see <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUser"/>.Accounts) to retrieve user contacts from.</param>
            <param name="filter">String to filter users from a particular company, otherwise <see cref="F:System.String.Empty"/>.</param>
            <param name="activeOnly">Boolean value to show only active users, or not.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUserContact"/> if user and account are valid, or null if not.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.EditUserContact(System.Guid,System.Guid,MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUserContact)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>User Contact</group>
            <summary>
            Adds or updates a user contact. The <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUserContact"/> must contain a valid country name and where applicable,
            a valid state name. Exceptions will be thrown if the country or state is invalid. A valid list of countries can be
            retrieved by calling <see cref="M:MyAdminAPI.MyAdminApiStore.GetCountries(System.Guid,System.Guid)"/>. A valid list of states for a country can be retrieved by calling
            <see cref="M:MyAdminAPI.MyAdminApiStore.GetStates(System.Guid,System.Guid,System.String)"/> - if no states are returned, then any state name will be accepted for that country.
            The <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUserContact"/> parameter must contain a <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUserCompany"/>.
            If the company does not already exist, the ID field should be set to 0 and a new company will be created. If the ID
            is greater than zero, the existing company will be updated. The <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUserCompany"/> must contain a 
            <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiAccount"/> with a valid account ID.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="userContact" required="required">The <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUserContact"/> to add or update.</param>
            <returns>The new or updated <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUserContact"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetOwnDatabases(System.Guid,System.Guid,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>General</group>
            <summary>
            Finds a list of databases belonging to the specified account or all accounts associated with the calling user's accounts.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount">Filters the list of databases to the specified account. If omitted, all databases belonging to all of the user's accounts will be retrieved.</param>
            <returns>List of databases belonging to the user's accounts.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetCurrentDeviceDatabases(System.Guid,System.Guid,System.String,System.Nullable{System.Int32})">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, Device_Admin</roles>
            <group>Devices and Contracts</group>
            <summary>
            Returns an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceDatabaseExtended"/> containing devices and their current databases and VINs (if available) for the specified account.
            The result set is limited to 1000 records. If the result set contains 1000 records, call GetCurrentDeviceDatabases again passing the Id of the last record in 
            the current set as the nextId parameter.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="required">The account to from which to retrieve the current list of device database.</param>
            <param name="nextId">If specified, returns device database records that have IDs greater than this value.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceDatabaseExtended"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetDeviceDatabaseNamesAsync(System.Guid,System.Guid,System.String[])">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Devices and Contracts</group>
            <summary>
            Returns an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceDatabaseOwnerShared"/> containing devices and their owner databases and shared databases (if available).
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="serialNumbers" required="required">The array of serial numbers for which to retrieve thet list of owner and shared databases.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceDatabaseOwnerShared"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetDeviceJurisdictionAsync(System.Guid,System.Guid,System.String[])">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Devices and Contracts</group>
            <summary>
            Returns an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceJurisdiction"/> containing devices and their jurisdiction and dig url.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="serialNumbers" required="required">The array of serial numbers for which to retrieve jurisdiction.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceJurisdiction"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.ShareDevice(System.Guid,System.Guid,System.Collections.Generic.List{System.String},System.String,System.String,System.Boolean)">
            <isSupported>false</isSupported>
            <summary>
            MyAdminApiUser, Device_Admin
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="serialNos" required="required">The array of serial numbers to share or unshare.</param>
            <param name="ownerDatabase" required="required">The name or GUID of the database which owns the devices.</param>
            <param name="sharedDatabase" required="required">The name or GUID of the database to which the devices will be shared or unshared.</param>
            <param name="shareDevice" required="required">Indicates whether devices should be shared or unshared. True for share, False to unshare.</param>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetCountries(System.Guid,System.Guid)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>General</group>
            <summary>
            Returns a list of valid country names.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <returns>List of valid countries.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetStates(System.Guid,System.Guid,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>General</group>
            <summary>
            Returns an array of valid state names for a given country or an empty array if no states exist
            for the country. Throws <see cref="T:System.ArgumentException"/> if an invalid country name is provided.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="countryName" required="required">The country name for which to retrieve the list of states.</param>
            <returns>Array of valid state names for a given country or an empty array if no states exist for the country.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.PostOrder(System.Guid,System.Guid,MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiOrderHeader,System.Collections.Generic.List{MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiInstallRequestItem},System.Collections.Generic.List{MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiOrderVehicleInfo})">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, Order_Admin</roles>
            <group>Order Management</group>
            <summary>
            Posts a new order to MyAdmin. Create a <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiOrderHeader"/> with details of the order. Required <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiOrderHeader"/> fields are:&lt;br/&gt;
            - devicePlanLevel&lt;br/&gt;
            - forAccount&lt;br/&gt;
            - orderItems&lt;br/&gt;
            - purchaseOrderNo&lt;br/&gt;
            - shipToId&lt;br/&gt;
            - shippingFeeId&lt;br/&gt;
            - warrantyOptionId&lt;br/&gt;
            Note that an Order which contains OrderItems for which a Bulk Price exists may be adjusted for applicable Bulk Price discounts. To take advantage of these discounts, either post an order with the desired quantity at the normal purchase price (the discounts will be applied automatically) or post an order with exactly BulkPriceMinQuantity (see <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiProductPricing"/>) quantity at the normal purchase price, and any additional quantity using the BulkPrice. Other combinations of order items may result in errors.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>      
            <param name="apiOrderHeader" required="required">The <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiOrderHeader"/> with details of the order.</param>
            <param name="apiInstallRequestItems">The list of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiInstallRequestItem"/> for install service products.</param>
            <param name="apiVehicleInfoList">The list of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiOrderVehicleInfo"/> for install service and keyless products.</param>
            <returns>Returns OrderId for order</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetOnlineOrderStatus(System.Guid,System.Guid,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, Order_Admin</roles>
            <group>Order Management</group>
            <summary>
            Returns an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiOnlineOrder"/> containing status of orders.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="required">Account where the order was created.</param>
            <param name="purchaseOrderNo">Filter by purchase order number.</param>
            <param name="resellerReference">Filter by reseller reference number.</param>
            <param name="orderNo">Filter by Geotab order number.</param>
            <param name="orderDateFrom">If specified, retrieves orders with order dates greater than or equal to this value (value in UTC).</param>
            <param name="orderDateTo">If specified, retrieves orders with order dates less than this value (value in UTC).</param>
            <param name="savedOrdersOnly">If true, only retrieve orders saved as planning orders.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiOnlineOrder"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.CancelOrder(System.Guid,System.Guid,System.Int32,System.String,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, Order_Admin</roles>
            <group>Order Management</group>
            <summary>
            Cancels an order at anytime before or after completion. If the order has already shipped an RMA request will be automaticly generated and a returns of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRmaRequest"/> objects is return otherwise a null result is return. 
            If orderId is specified the order is canceled by orderId and forAccount, otherwise specify forAccount with purchaseOrderNo to cancel order.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="orderId" >The order Id to cancel for, otherwise <seealso cref="F:System.String.Empty"/>.</param>
            <param name="forAccount" required="required">Account to cancel order for</param>
            <param name="purchaseOrderNo">Filter by purchase order number, otherwise <seealso cref="F:System.String.Empty"/>.</param>
            <returns>Object of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRmaRequest"/> or <see cref="T:System.Nullable"/></returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetDeviceBillings(System.Guid,System.Guid,System.String,System.String,System.Int32,System.Int32)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, Billing_Admin</roles>
            <group>Devices and Contracts</group>
            <summary>
            Returns an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContractBilling"/> objects for the given period and filters.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount">Account to retrieve billing records for, otherwise <seealso cref="F:System.String.Empty"/>.</param>
            <param name="serialNoFilter">Device serial number filter, otherwise <seealso cref="F:System.String.Empty"/>.</param>
            <param name="monthFilter" required="required">The month number for the billing period (1 = January, 12 = December)</param>
            <param name="yearFilter" required="required">The 4-digit year for the billing period</param>
            <remarks>
            This method is deprecated - Please use GetDeviceContractTransactions instead.
            </remarks>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContractBilling"/> objects for the given period and filters</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetDeviceContractTransactions(System.Guid,System.Guid,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, Billing_Admin</roles>
            <group>Devices and Contracts</group>
            <summary>
            Returns an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContractTransaction"/> objects for the given period and filters. If nextId is specified, the result set is limited to 1000 records. 
            To obtain the first set of records, pass 0 into nextId. If the result set contains 1000 records, call GetDeviceContractTransactions again passing the Id of the last record in 
            the current result set as the nextId parameter.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="required">Account to retrieve billing records for, otherwise <seealso cref="F:System.String.Empty"/>.</param>
            <param name="serialNoFilter">Device serial number filter, otherwise <seealso cref="F:System.String.Empty"/>.</param>
            <param name="monthFilter" required="required">The month number for the billing period (1 = January, 12 = December)</param>
            <param name="yearFilter" required="required">The 4-digit year for the billing period</param>
            <param name="nextId">If specified, returns transaction records that have IDs greater than this value.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContractTransaction"/> objects for the given period and filters</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetDeviceContractCreditTransactions(System.Guid,System.Guid,System.String,System.Int32,System.Int32)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, Billing_Admin</roles>
            <group>Devices and Contracts</group>
            <summary>
            Returns an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContractCreditTransaction"/> objects for the given period and filters.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="required">>Account to retrieve billing records for.</param>
            <param name="monthFilter" required="required">The month number for the billing period (1 = January, 12 = December)</param>
            <param name="yearFilter" required="required">The 4-digit year for the billing period</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceContractCreditTransaction"/> objects for the given period and filters</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetRmaRequests(System.Guid,System.Guid,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, RMAViewOnly</roles>
            <group>RMA</group>
            <groupSummary>This group of methods allows the user to submit RMA requests and view the status of existing RMA Requests and RMAs.</groupSummary>
            <summary>
            Gets an array of active <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRmaRequest"/> for the specified account.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="required">The account to retrieve RMA requests for.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRmaRequest"/> of active RMA requests.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetRmaRequestItems(System.Guid,System.Guid,System.String,System.Int32)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, RMAViewOnly</roles>
            <group>RMA</group>
            <summary>
            Gets an array of devices (<see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRmaRequestItem"/>) that belong to a <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRmaRequest"/>.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="required">The account the RMA request belongs to.</param>
            <param name="rmaRequestId" required="required">The ID of the RMA request to retrieve the list of items for.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRmaRequestItem"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetRmas(System.Guid,System.Guid,System.String,System.String,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, RMAViewOnly</roles>
            <group>RMA</group>
            <summary>
            Gets an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRma"/> for the specified account. If no deviceFilter or resellerReferenceFilter are
            specified, the method returns all active RMAs in the account. If a deviceFilter or resellerReferenceFilter are specified,
            the method returns the RMA(s) matching the filter(s), regardless of active status.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="required">The account from which to retrieve RMA.</param>
            <param name="deviceFilter">Device serial number to search.</param>
            <param name="resellerReferenceFilter">Reseller reference number/code to search.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRma"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.CreateRmaRequest(System.Guid,System.Guid,System.String,System.Int32,System.String,System.String,System.String,System.String[],System.String[],System.Int32[],System.Int32)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, RMARequestCreate</roles>
            <group>RMA</group>
            <summary>
            Creates an RMA request and returns a <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRmaRequest"/>.
            </summary>
            <remarks>The itemsForRepair, reasonsForRepair, and quantitiesForRepair arrays must contain the same number of elements (eg. one reason and quantity per item).
            All devices should have their quantity set to one.</remarks>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="required">The account under which the RMA request will be created.</param>
            <param name="shipToId" required="required">ID of the <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiUserContact"/> whose address will be associated with the RMA.</param>
            <param name="caseNo">The ID of the <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiTicket"/> associated with the RMA request. If no caseNo is provided, a new case will be created.</param>
            <param name="comments">Comments related to the RMA request.</param>
            <param name="resellerReference">Reseller reference number/code.</param>
            <param name="itemsForRepair" required="required">String array of device serial numbers or product codes to be repaired.</param>
            <param name="reasonsForRepair" required="required">String array of reasons for each product to be repaired. For Sales Returns, pass in the <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiReturnReason"/> name.</param>
            <param name="quantitiesForRepair" required="required">Int array of quantities for each product to be repaired.</param>
            <param name="rmaTypeId" required="required">ID of the <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRmaType"/>.</param>
            <returns>The <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRmaRequest"/> that was created.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetReturnReasons(System.Guid,System.Guid)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>RMA</group>
            <summary>
            Returns a list of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiReturnReason"/> used for Sales Return RMAs.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <returns>List of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiReturnReason"/> used for Sales Return RMAs.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetRmaTypes(System.Guid,System.Guid)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>RMA</group>
            <summary>
            Returns a list of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRmaType"/>.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <returns>List of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRmaType"/></returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetRequiredRmasAsync(System.Guid,System.Guid,System.String,System.String[])">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, RMAViewOnly</roles>
            <group>RMA</group>
            <summary>
            Returns a list of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRequiredRma"/>.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="optional">Account to look for required RMA.</param>
            <param name="serialNumbers" required="optional">List of Serial Numbers to look for required RMA.</param>
            <returns>List of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiRequiredRma"/></returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetMinedVehicleDataByVins(System.Guid,System.Guid,System.String[],System.Boolean)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Vin LookUp</group>
            <summary>
            Gets all details of vehicles with option to include engine data. Returns a list of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiMinedVehicleData"/>.
            </summary>
            <remarks>The Vin Decoder only supports North American vehicles at this time. Please submit a support ticket if you require assistance for vehicles in other regions.
            Geotab cannot guarantee the accuracy of this information.If you find this information to be incorrect, please contact Geotab Support</remarks>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="vins" required="required">Vehicle Vin numbers</param>
            <param name="includeEngineDataSupport" required="required">include engine data</param>
            <returns>A list of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiMinedVehicleData"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetMinedVehicleData(System.Guid,System.Guid,System.String,System.String,System.String,System.Boolean)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Vin LookUp</group>
            <summary>
            Gets all details of vehicles with option to include engine data. Returns a list of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiMinedVehicleData"/>.
            </summary>
            <remarks>The Vin Decoder only supports North American vehicles at this time. Please submit a support ticket if you require assistance for vehicles in other regions.
            Geotab cannot guarantee the accuracy of this information.If you find this information to be incorrect, please contact Geotab Support</remarks>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="make" required="required">Make of vehicle</param>
            <param name="model" required="required">vehicle model</param>
            <param name="year" required="required">Year of vehicle</param>
            <param name="includeEngineDataSupport" required="required">include engine data</param>
            <returns>A list of<see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiMinedVehicleData"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.ProvisionDeviceToAccount(System.String,System.String,System.Guid,System.Guid,System.Int32,System.String,System.String,System.String)">
            <isSupported>false</isSupported>
            <requiredAccess>Third-Party-Integrator</requiredAccess>
            <summary>
            This method is marked as unsupported so that we can separate the new and legacy versions into two different methods
            in the documentation.
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="apiKey"></param>
            <param name="sessionId"></param>
            <param name="productId"></param>
            <param name="erpNo"></param>
            <param name="promoCode"></param>
            <param name="subPlan"></param>
            <returns></returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.ProvisionDeviceToAccount(System.Guid,System.Guid,System.Int32,System.String,System.String,System.String)">
            <isSupported>true</isSupported>
            <group>Third Party Integration</group>
            <groupSummary>
            This group of methods allows the user to manage third party devices and their data. These methods are only available to third-party
            integrators. In addition to the MyAdminApiLib, a reference must be added to Geotab.Checkmate.ObjectModel.dll.
            </groupSummary>
            <requiredAccess>Third-Party-Integrator</requiredAccess>
            <roles>MyAdminApiUser, Third-Party-Integrator</roles>
            <summary>
            Provisions a device to an account.
            </summary>
            <remarks>Note: This method cannot be called in the sandbox environment and will throw an exception.</remarks>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="productId" required="required">Product ID to provision.</param>
            <param name="erpNo">Account number for new activation.</param>
            <param name="promoCode">Promo Code for third-party device</param>
            <param name="subPlan">Subscription Plan to provision OEM devices</param>
            <returns>A <see cref="T:Geotab.Checkmate.ObjectModel.ProvisionResult"/> if provision was successful, null if not.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.ProvisionDeviceToAccount(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <isSupported>false</isSupported>
            <requiredAccess>Third-Party-Integrator</requiredAccess>
            <roles>MyAdminApiUser, Third-Party-Integrator</roles>
            <group>Third Party Integration</group>
            <summary>
            Provisions a device to an account.
            </summary>
            <remarks>
            This method is deprecated - Use version of ProvisionDeviceToAccount which takes API Key and Session ID.
            &lt;br/&gt;&lt;br/&gt;
            Note: This method cannot be called in the sandbox environment and will throw an exception.
            </remarks>
            <param name="username" required="required">Username of a valid Third Party Integrator user.</param>
            <param name="password" required="required">Password for user.</param>
            <param name="productId" required="required">Product ID to provision.</param>
            <param name="erpNo">Account number for new activation.</param>
            <param name="promoCode">Promo Code for third-party device</param>
            <param name="subPlan">Subscription Plan to provision OEM devices</param>
            <returns>A <see cref="T:Geotab.Checkmate.ObjectModel.ProvisionResult"/> if provision was successful, null if not.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.ProvisionDevice(System.String,System.String,System.Guid,System.Guid,System.Int32,System.String,System.String)">
            <isSupported>false</isSupported>
            <requiredAccess>Third-Party-Integrator</requiredAccess>
            <roles>MyAdminApiUser, Third-Party-Integrator</roles>
            <group>Third Party Integration</group>
            <summary>
            Provisions a device to the user's default account.
            </summary>
            <param name="username">Username of a valid Third Party Integrator user.</param>
            <param name="password">Password for user.</param>
            <param name="apiKey">The active API Key.</param>
            <param name="sessionId">The active session ID.</param>
            <param name="productId">Product ID to provision.</param>
            <param name="promoCode">Promo Code for third-party device</param>
            <param name="subPlan">Subscription Plan to provision OEM devices</param>
            <returns>A <see cref="T:Geotab.Checkmate.ObjectModel.ProvisionResult"/> if provision was successful, null if not.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.ProvisionDevice(System.Guid,System.Guid,System.Int32,System.String,System.String)">
            <isSupported>true</isSupported>
            <requiredAccess>Third-Party-Integrator</requiredAccess>
            <roles>MyAdminApiUser, Third-Party-Integrator</roles>
            <group>Third Party Integration</group>
            <summary>
            Provisions a device to the user's default account.
            </summary>
            <remarks>Note: This method cannot be called in the sandbox environment and will throw an exception.</remarks>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="productId" required="required">Product ID to provision.</param>
            <param name="promoCode">Promo Code for third-party device</param>
            <param name="subPlan">Subscription Plan to provision OEM devices</param>
            <returns>A <see cref="T:Geotab.Checkmate.ObjectModel.ProvisionResult"/> if provision was successful, null if not.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.ProvisionDevice(System.String,System.String,System.Int32,System.String,System.String)">
            <isSupported>false</isSupported>
            <requiredAccess>Third-Party-Integrator</requiredAccess>
            <roles>MyAdminApiUser, Third-Party-Integrator</roles>
            <group>Third Party Integration</group>
            <summary>
            Provisions a device to the user's default account.
            </summary>
            <remarks>
            This method is deprecated - Use version of ProvisionDevice which takes API Key and Session ID
            &lt;br/&gt;&lt;br/&gt;
            Note: This method cannot be called in the sandbox environment and will throw an exception.
            </remarks>
            <param name="username" required="required">Username of a valid Third Party Integrator user.</param>
            <param name="password" required="required">Password for user.</param>
            <param name="productId" required="required">Product ID to provision.</param>
            <param name="promoCode">Promo Code for third-party device</param>
            <param name="subPlan">Subscription Plan to provision OEM devices</param>
            <returns>A <see cref="T:Geotab.Checkmate.ObjectModel.ProvisionResult"/> if provision was successful, null if not.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.AddData(System.Guid,System.Guid,System.Collections.Generic.List{System.Object})">
            <isSupported>true</isSupported>
            <requiredAccess>Third-Party-Integrator</requiredAccess>
            <roles>MyAdminApiUser, Third-Party-Integrator</roles>
            <group>Third Party Integration</group>
            <summary>
            Adds a set of third-party GPS records into the Geotab database.
            </summary>
            <remarks>Note: This method cannot be called in the sandbox environment and will throw an exception.</remarks>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="recordsToAdd" required="required">List of <see cref="T:Geotab.Checkmate.ObjectModel.ThirdPartyDataRecord"/> to add to the database.</param>
            <returns>List of <see cref="T:Geotab.Checkmate.ObjectModel.AddDataResult"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.AddGps(System.String,System.String,System.Guid,System.Guid,System.Collections.Generic.List{System.Object})">
            <isSupported>false</isSupported>
            <requiredAccess>Third-Party-Integrator</requiredAccess>
            <roles>MyAdminApiUser, Third-Party-Integrator</roles>
            <group>Third Party Integration</group>
            <summary>
            Adds a set of third-party GPS records into the Geotab database.
            </summary>
            <param name="username">Username of a valid Third Party Integrator user.</param>
            <param name="password">Password for user.</param>
            <param name="apiKey">The active API Key.</param>
            <param name="sessionId">The active session ID.</param>
            <param name="recordsToAdd">List of <see cref="T:Geotab.Checkmate.ObjectModel.ThirdPartyLogRecord"/> to add to the database.</param>
            <returns>List of <see cref="T:Geotab.Checkmate.ObjectModel.AddGpsResult"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.AddGps(System.Guid,System.Guid,System.Collections.Generic.List{System.Object})">
            <isSupported>true</isSupported>
            <requiredAccess>Third-Party-Integrator</requiredAccess>
            <roles>MyAdminApiUser, Third-Party-Integrator</roles>
            <group>Third Party Integration</group>
            <summary>
            Adds a set of third-party GPS records into the Geotab database.
            </summary>
            <remarks>Note: This method cannot be called in the sandbox environment and will throw an exception.</remarks>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="recordsToAdd" required="required">List of <see cref="T:Geotab.Checkmate.ObjectModel.ThirdPartyDataRecord"/> to add to the database.</param>
            <returns>List of <see cref="T:Geotab.Checkmate.ObjectModel.AddDataResult"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.AddGps(System.String,System.String,System.Collections.Generic.List{System.Object})">
            <isSupported>false</isSupported>
            <requiredAccess>Third-Party-Integrator</requiredAccess>
            <roles>MyAdminApiUser, Third-Party-Integrator</roles>
            <group>Third Party Integration</group>
            <summary>
            Adds a set of third-party GPS records into the Geotab database.
            </summary>
            <remarks>
            This method is deprecated - Use version of AddGps which takes API Key and Session ID.
            &lt;br/&gt;&lt;br/&gt;
            Note: This method cannot be called in the sandbox environment and will throw an exception.
            </remarks>
            <param name="username" required="required">Username of a valid Third Party Integrator user.</param>
            <param name="password" required="required">Password for user.</param>
            <param name="recordsToAdd" required="required">List of <see cref="T:Geotab.Checkmate.ObjectModel.ThirdPartyDataRecord"/> to add to the database.</param>
            <returns>List of <see cref="T:Geotab.Checkmate.ObjectModel.AddDataResult"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetDeviceOrderEntries(System.Guid,System.Guid,System.String,System.String,System.Boolean)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser, Order_Admin</roles>
            <group>Order Management</group>
            <summary>
            Returns an array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceOrderEntry"/> containing status of orders.
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="forAccount" required="required">Account where the order was created.</param>
            <param name="poNum">Filter by purchase order number.</param>
            <param name="includeCarrierInfo">If specified, include carrier info.</param>
            <returns>Array of <see cref="T:MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiDeviceOrderEntry"/>.</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetHelpdeskTicket(System.Guid,System.Guid,System.String,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Help Desk</group>
            <groupSummary>This group of methods allows the user to interact with Geotab's help desk.</groupSummary>
            <summary>
            Get Single Ticket from MyAdmin Helpdesk By TicketId and Account Number
            </summary>
            <remarks>
            Account Number, Subject, Description, Type (Issue/Inquiry) are required.
            </remarks>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="accountNumber" required="required">The Account Number that the tickets belong to</param>
            <param name="ticketId" required="required">The requested Ticket Number, must be under the requested account</param>
            <returns>ApiHelpdeskTicket Object</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetHelpdeskTickets(System.Guid,System.Guid,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.DateTime,System.DateTime)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Help Desk</group>
            <summary>
            Get all tickets from MyAdmin Helpdesk By Account Number
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="accountNumber" required="required">The Account Number that the tickets belong to</param>
            <param name="searchString">Filter result by ticket number or ticket title</param>
            <param name="onlyOpenTickets">Only return tickets that the status is open, default is true</param>
            <param name="onlyClosedTickets">Only return tickets that the status is closed, default is false</param>
            <param name="includeAccountTickets">Include tickets from everyone under the account, default is false</param>
            <param name="onlyArchivedTickets">Only return archived tickets, default is false</param>
            <param name="startDate">Only return tickets created after startDate</param>
            <param name="endDate">Only return tickets created before endDate</param>
            <returns>Array of ApiHelpdeskTicket</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.PostHelpdeskTicket(System.Guid,System.Guid,MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiHelpdeskTicket)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Help Desk</group>
            <summary>
            Create a new Helpdesk Ticket
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="ticket" required="required">The to be created MyAdmin Helpdesk Ticket Object</param>
            <returns>Ticket Id</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.PatchHelpdeskTicket(System.Guid,System.Guid,MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiHelpdeskTicket,System.String,System.Boolean)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Help Desk</group>
            <summary>
            Update an existing Helpdesk Ticket
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="ticketDiff" required="required">The delta change of the Ticket Object</param>
            <param name="ticketId">Ticket Number</param>
            <param name="closeTicket">Request to close the ticket, default is false</param>
            <returns>Ticket Id</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetHelpdeskComment(System.Guid,System.Guid,System.String,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Help Desk</group>
            <summary>
            Get a single comment of an Helpdesk Ticket
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="ticketId" required="required">The requested Ticket Number, must be under the requested account</param>
            <param name="commentId" required="required">The comment Id that belongs to the requested Ticket</param>
            <returns>ApiHelpdeskComment</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetHelpdeskComments(System.Guid,System.Guid,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Help Desk</group>
            <summary>
            Get all comments of an Helpdesk Ticket
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="ticketId" required="required">The requested Ticket Number, must be under the requested account</param>
            <returns>Array of ApiHelpdeskComment</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.PostHelpdeskComment(System.Guid,System.Guid,MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiHelpdeskComment,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Help Desk</group>
            <summary>
            Create a new comment of an Helpdesk Ticket
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="comment" required="required">The to be created Comment object of the Ticket</param>
            /// <param name="ticketId" required="required">The ticket Id of the comment</param>
            <returns>Comment Id</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetHelpdeskAttachment(System.Guid,System.Guid,System.String,System.String,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Help Desk</group>
            <summary>
            Get a single Helpdesk Attachment Object in the comment of the ticket
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="ticketId" required="required">The requested Ticket Number, must be under the requested account</param>
            <param name="commentId" required="required">The comment Id that belongs to the requested Ticket</param>
            <param name="attachmentId" required="required">The Attachment Id under a comment of the ticket</param>
            <returns>ApiHelpdeskAttachment</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetHelpdeskAttachments(System.Guid,System.Guid,System.String,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Help Desk</group>
            <summary>
            Get all Helpdesk Attachment Object in the comment of the ticket
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="ticketId" required="required">The requested Ticket Number, must be under the requested account</param>
            <param name="commentId" required="required">The comment Id that belongs to the requested Ticket</param>
            <returns>Array of ApiHehlpdeskAttachment</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.PostHelpdeskAttachment(System.Guid,System.Guid,System.String,System.String,MyAdminApiLib.Geotab.MyAdmin.MyAdminApi.ObjectModel.ApiHelpdeskAttachment)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Help Desk</group>
            <summary>
            Create a Helpdesk Attachment Object in the comment of the ticket
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="ticketId" required="required">The requested Ticket Number, must be under the requested account</param>
            <param name="commentId">Comment Id of the Ticket</param>
            <param name="attachment" required="required">The to be created Attachment Object</param>
            <returns>Attachment Id</returns>
        </member>
        <member name="M:MyAdminAPI.MyAdminApiStore.GetAttachmentBinary(System.Guid,System.Guid,System.String,System.String,System.String)">
            <isSupported>true</isSupported>
            <roles>MyAdminApiUser</roles>
            <group>Help Desk</group>
            <summary>
            Get the byte array of the Attachment
            </summary>
            <param name="apiKey" required="required">The active API Key.</param>
            <param name="sessionId" required="required">The active session ID.</param>
            <param name="ticketId" required="required">The requested Ticket Number, must be under the requested account</param>
            <param name="commentId" required="required">The comment Id that belongs to the requested Ticket</param>
            <param name="attachmentId" required="required">The Attachment Id under a comment of the ticket</param>
            <returns>Binary of the file</returns>
        </member>
    </members>
</doc>
